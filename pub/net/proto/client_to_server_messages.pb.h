// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_to_server_messages.proto

#ifndef PROTOBUF_INCLUDED_client_5fto_5fserver_5fmessages_2eproto
#define PROTOBUF_INCLUDED_client_5fto_5fserver_5fmessages_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_client_5fto_5fserver_5fmessages_2eproto 

namespace protobuf_client_5fto_5fserver_5fmessages_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_client_5fto_5fserver_5fmessages_2eproto
namespace greyvarproto {
class ClientRequests;
class ClientRequestsDefaultTypeInternal;
extern ClientRequestsDefaultTypeInternal _ClientRequests_default_instance_;
class ConnectionRequest;
class ConnectionRequestDefaultTypeInternal;
extern ConnectionRequestDefaultTypeInternal _ConnectionRequest_default_instance_;
class MoveRequest;
class MoveRequestDefaultTypeInternal;
extern MoveRequestDefaultTypeInternal _MoveRequest_default_instance_;
class NewPlayer;
class NewPlayerDefaultTypeInternal;
extern NewPlayerDefaultTypeInternal _NewPlayer_default_instance_;
}  // namespace greyvarproto
namespace google {
namespace protobuf {
template<> ::greyvarproto::ClientRequests* Arena::CreateMaybeMessage<::greyvarproto::ClientRequests>(Arena*);
template<> ::greyvarproto::ConnectionRequest* Arena::CreateMaybeMessage<::greyvarproto::ConnectionRequest>(Arena*);
template<> ::greyvarproto::MoveRequest* Arena::CreateMaybeMessage<::greyvarproto::MoveRequest>(Arena*);
template<> ::greyvarproto::NewPlayer* Arena::CreateMaybeMessage<::greyvarproto::NewPlayer>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace greyvarproto {

// ===================================================================

class ClientRequests : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:greyvarproto.ClientRequests) */ {
 public:
  ClientRequests();
  virtual ~ClientRequests();

  ClientRequests(const ClientRequests& from);

  inline ClientRequests& operator=(const ClientRequests& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientRequests(ClientRequests&& from) noexcept
    : ClientRequests() {
    *this = ::std::move(from);
  }

  inline ClientRequests& operator=(ClientRequests&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientRequests& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientRequests* internal_default_instance() {
    return reinterpret_cast<const ClientRequests*>(
               &_ClientRequests_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ClientRequests* other);
  friend void swap(ClientRequests& a, ClientRequests& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientRequests* New() const final {
    return CreateMaybeMessage<ClientRequests>(NULL);
  }

  ClientRequests* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClientRequests>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClientRequests& from);
  void MergeFrom(const ClientRequests& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClientRequests* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .greyvarproto.MoveRequest moveRequest = 1;
  bool has_moverequest() const;
  void clear_moverequest();
  static const int kMoveRequestFieldNumber = 1;
  private:
  const ::greyvarproto::MoveRequest& _internal_moverequest() const;
  public:
  const ::greyvarproto::MoveRequest& moverequest() const;
  ::greyvarproto::MoveRequest* release_moverequest();
  ::greyvarproto::MoveRequest* mutable_moverequest();
  void set_allocated_moverequest(::greyvarproto::MoveRequest* moverequest);

  // @@protoc_insertion_point(class_scope:greyvarproto.ClientRequests)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::greyvarproto::MoveRequest* moverequest_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_5fto_5fserver_5fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MoveRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:greyvarproto.MoveRequest) */ {
 public:
  MoveRequest();
  virtual ~MoveRequest();

  MoveRequest(const MoveRequest& from);

  inline MoveRequest& operator=(const MoveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MoveRequest(MoveRequest&& from) noexcept
    : MoveRequest() {
    *this = ::std::move(from);
  }

  inline MoveRequest& operator=(MoveRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MoveRequest* internal_default_instance() {
    return reinterpret_cast<const MoveRequest*>(
               &_MoveRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MoveRequest* other);
  friend void swap(MoveRequest& a, MoveRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MoveRequest* New() const final {
    return CreateMaybeMessage<MoveRequest>(NULL);
  }

  MoveRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MoveRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MoveRequest& from);
  void MergeFrom(const MoveRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MoveRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 playerId = 1;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // int32 x = 2;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // int32 y = 3;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:greyvarproto.MoveRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 playerid_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_5fto_5fserver_5fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConnectionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:greyvarproto.ConnectionRequest) */ {
 public:
  ConnectionRequest();
  virtual ~ConnectionRequest();

  ConnectionRequest(const ConnectionRequest& from);

  inline ConnectionRequest& operator=(const ConnectionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConnectionRequest(ConnectionRequest&& from) noexcept
    : ConnectionRequest() {
    *this = ::std::move(from);
  }

  inline ConnectionRequest& operator=(ConnectionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnectionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConnectionRequest* internal_default_instance() {
    return reinterpret_cast<const ConnectionRequest*>(
               &_ConnectionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ConnectionRequest* other);
  friend void swap(ConnectionRequest& a, ConnectionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConnectionRequest* New() const final {
    return CreateMaybeMessage<ConnectionRequest>(NULL);
  }

  ConnectionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConnectionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConnectionRequest& from);
  void MergeFrom(const ConnectionRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConnectionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:greyvarproto.ConnectionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_5fto_5fserver_5fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NewPlayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:greyvarproto.NewPlayer) */ {
 public:
  NewPlayer();
  virtual ~NewPlayer();

  NewPlayer(const NewPlayer& from);

  inline NewPlayer& operator=(const NewPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NewPlayer(NewPlayer&& from) noexcept
    : NewPlayer() {
    *this = ::std::move(from);
  }

  inline NewPlayer& operator=(NewPlayer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NewPlayer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NewPlayer* internal_default_instance() {
    return reinterpret_cast<const NewPlayer*>(
               &_NewPlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(NewPlayer* other);
  friend void swap(NewPlayer& a, NewPlayer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NewPlayer* New() const final {
    return CreateMaybeMessage<NewPlayer>(NULL);
  }

  NewPlayer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NewPlayer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NewPlayer& from);
  void MergeFrom(const NewPlayer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NewPlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:greyvarproto.NewPlayer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_5fto_5fserver_5fmessages_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ClientRequests

// .greyvarproto.MoveRequest moveRequest = 1;
inline bool ClientRequests::has_moverequest() const {
  return this != internal_default_instance() && moverequest_ != NULL;
}
inline void ClientRequests::clear_moverequest() {
  if (GetArenaNoVirtual() == NULL && moverequest_ != NULL) {
    delete moverequest_;
  }
  moverequest_ = NULL;
}
inline const ::greyvarproto::MoveRequest& ClientRequests::_internal_moverequest() const {
  return *moverequest_;
}
inline const ::greyvarproto::MoveRequest& ClientRequests::moverequest() const {
  const ::greyvarproto::MoveRequest* p = moverequest_;
  // @@protoc_insertion_point(field_get:greyvarproto.ClientRequests.moveRequest)
  return p != NULL ? *p : *reinterpret_cast<const ::greyvarproto::MoveRequest*>(
      &::greyvarproto::_MoveRequest_default_instance_);
}
inline ::greyvarproto::MoveRequest* ClientRequests::release_moverequest() {
  // @@protoc_insertion_point(field_release:greyvarproto.ClientRequests.moveRequest)
  
  ::greyvarproto::MoveRequest* temp = moverequest_;
  moverequest_ = NULL;
  return temp;
}
inline ::greyvarproto::MoveRequest* ClientRequests::mutable_moverequest() {
  
  if (moverequest_ == NULL) {
    auto* p = CreateMaybeMessage<::greyvarproto::MoveRequest>(GetArenaNoVirtual());
    moverequest_ = p;
  }
  // @@protoc_insertion_point(field_mutable:greyvarproto.ClientRequests.moveRequest)
  return moverequest_;
}
inline void ClientRequests::set_allocated_moverequest(::greyvarproto::MoveRequest* moverequest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete moverequest_;
  }
  if (moverequest) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      moverequest = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, moverequest, submessage_arena);
    }
    
  } else {
    
  }
  moverequest_ = moverequest;
  // @@protoc_insertion_point(field_set_allocated:greyvarproto.ClientRequests.moveRequest)
}

// -------------------------------------------------------------------

// MoveRequest

// int32 playerId = 1;
inline void MoveRequest::clear_playerid() {
  playerid_ = 0;
}
inline ::google::protobuf::int32 MoveRequest::playerid() const {
  // @@protoc_insertion_point(field_get:greyvarproto.MoveRequest.playerId)
  return playerid_;
}
inline void MoveRequest::set_playerid(::google::protobuf::int32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:greyvarproto.MoveRequest.playerId)
}

// int32 x = 2;
inline void MoveRequest::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 MoveRequest::x() const {
  // @@protoc_insertion_point(field_get:greyvarproto.MoveRequest.x)
  return x_;
}
inline void MoveRequest::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:greyvarproto.MoveRequest.x)
}

// int32 y = 3;
inline void MoveRequest::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 MoveRequest::y() const {
  // @@protoc_insertion_point(field_get:greyvarproto.MoveRequest.y)
  return y_;
}
inline void MoveRequest::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:greyvarproto.MoveRequest.y)
}

// -------------------------------------------------------------------

// ConnectionRequest

// -------------------------------------------------------------------

// NewPlayer

// string username = 1;
inline void NewPlayer::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NewPlayer::username() const {
  // @@protoc_insertion_point(field_get:greyvarproto.NewPlayer.username)
  return username_.GetNoArena();
}
inline void NewPlayer::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:greyvarproto.NewPlayer.username)
}
#if LANG_CXX11
inline void NewPlayer::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:greyvarproto.NewPlayer.username)
}
#endif
inline void NewPlayer::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:greyvarproto.NewPlayer.username)
}
inline void NewPlayer::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:greyvarproto.NewPlayer.username)
}
inline ::std::string* NewPlayer::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:greyvarproto.NewPlayer.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewPlayer::release_username() {
  // @@protoc_insertion_point(field_release:greyvarproto.NewPlayer.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewPlayer::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:greyvarproto.NewPlayer.username)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace greyvarproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_client_5fto_5fserver_5fmessages_2eproto
